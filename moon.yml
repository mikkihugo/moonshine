# moon.yml - Moon Shine Extension Configuration
$schema: 'https://moonrepo.dev/schemas/project.json'

# Project identifier for Moon
id: 'moon-shine'

type: 'library'
language: 'rust'
platform: 'rust'

# Build tasks
tasks:
  # Setup Rust toolchain for WASM
  setup-toolchain:
    command: 'rustup target add wasm32-unknown-unknown && cargo install wasm-opt || true'
    options:
      cache: false

  # Build WASM extension for Moon
  build-wasm:
    command: 'cargo build --target wasm32-unknown-unknown --release'
    inputs:
      - 'src/**/*'
      - 'Cargo.toml'
      - 'Cargo.lock'
    outputs:
      - 'target/wasm32-unknown-unknown/release/moon_shine.wasm'
    options:
      cache: true

  # Development build
  dev-build:
    command: 'cargo build --target wasm32-unknown-unknown'
    inputs:
      - 'src/**/*'
      - 'Cargo.toml'
    outputs:
      - 'target/wasm32-unknown-unknown/debug/moon_shine.wasm'
    options:
      cache: true

  # Test the extension
  test:
    command: 'cargo test --lib'
    inputs:
      - 'src/**/*'
      - 'tests/**/*'
      - 'Cargo.toml'
    options:
      cache: true

  # Lint code
  lint:
    command: |
      cargo clippy --target wasm32-unknown-unknown --all-features -- -D warnings
      cargo fmt --check
    inputs:
      - 'src/**/*'
      - 'Cargo.toml'
    options:
      cache: true

  # Type check (for Rust, this is built into cargo check)
  type-check:
    command: 'cargo check --target wasm32-unknown-unknown'
    inputs:
      - 'src/**/*'
      - 'Cargo.toml'
    options:
      cache: true

  # Clean build artifacts
  clean:
    command: 'cargo clean'
    options:
      cache: false